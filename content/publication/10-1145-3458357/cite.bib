@article{10.1145/3458357,
 abstract = {A large portion of the recent performance increase in the High Performance Computing
(HPC) and Machine Learning (ML) domains is fueled by accelerator cards. Many popular
ML frameworks support accelerators by organizing computations as a computational graph
over a set of highly optimized, batched general-purpose kernels. While this approach
simplifies the kernels’ implementation for each individual accelerator, the increasing
heterogeneity among accelerator architectures for HPC complicates the creation of
portable and extensible libraries of such kernels. Therefore, using a generalization
of the CUDA community’s warp register cache programming idiom, we propose a new programming
idiom (CoRe) and a virtual architecture model (PIRCH), abstracting over SIMD and SIMT
paradigms. We define and automate the mapping process from a single source to PIRCH’s
intermediate representation and develop backends that issue code for three different
architectures: Intel AVX512, NVIDIA GPUs, and NEC SX-Aurora. Code generated by our
source-to-source compiler for batched kernels, borG, competes favorably with vendor-tuned
libraries and is up to 2× faster than hand-tuned kernels across architectures.},
 address = {New York, NY, USA},
 articleno = {37},
 author = {Thuerck, Daniel and Weber, Nicolas and Bifulco, Roberto},
 doi = {10.1145/3458357},
 issn = {1544-3566},
 issue_date = {June 2021},
 journal = {ACM Trans. Archit. Code Optim.},
 keywords = {cross-architecture compilation, SIMD, warp-register cache, Accelerated computing, batched kernels, GPGPU, SIMT, source-to-source compiler},
 month = {June},
 number = {3},
 numpages = {26},
 publisher = {Association for Computing Machinery},
 title = {Flynn’s Reconciliation: Automating the Register Cache Idiom for Cross-Accelerator Programming},
 url = {https://doi.org/10.1145/3458357},
 volume = {18},
 year = {2021}
}

